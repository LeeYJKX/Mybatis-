<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bit.dao.StudentDao">

    <select id="selectStudentById" resultType="com.bit.domain.Student">
        select id,name,email,age from student where id=#{id}
    </select>

    <!--多个参数，使用@Param命名-->
    <!--<select id="selectMultiParam" resultType="stu">-->
    <select id="selectMultiParam" resultType="Student">
        select id,name,email,age from student where name=#{myname} or age=#{myage}
    </select>

    <!--selectStudentReturnViewStudent-->
    <!--<select id="selectStudentReturnViewStudent" resultType="com.bit.vo.ViewStudent">-->
<!--    <select id="selectStudentReturnViewStudent" resultType="vstu">-->
    <select id="selectStudentReturnViewStudent" resultType="ViewStudent">
        select id,name,email,age from student where id=#{sid}
    </select>

    <!--sql执行后返回一行一列-->
   <!-- <select id="countStudent" resultType="int">-->
    <select id="countStudent" resultType="java.lang.Integer">
        select count(*) from student
    </select>

    <!--返回Map
    1)列名是map的key,列值是Map的value
    2）返回map的时候最多只能返回一行记录，多于一行是错误的
    -->
    <select id="selectMapById" resultType="java.util.HashMap">
        select id,name,age from student where id=#{stuid}
    </select>

    <!--使用resultMap
    1）定义一个resultMap
    2）在select标签中，使用resultMap来引用1定义的。
    -->

    <!--定义resultMap
    id:自定义名称,表示你定义的这个resultMap
    type:java类型的全限定名称
    -->
    <resultMap id="studentMap" type="com.bit.domain.Student">
        <!--定义列名和java属性的关系-->
        <!--主键列使用id标签
        column:列名
        property:属性名-->
        <id column="id" property="id"/>
        <!--非主键列，使用result-->
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
    </resultMap>
    <select id="selectAllStudent" resultMap="studentMap">
        select id,name,email,age from student
    </select>

    <!--列名属性名不一样:第一种方式-->
    <resultMap id="myStudentMap" type="com.bit.domain.MyStudent">
        <id column="id" property="stuid"/>
        <!--非主键列，使用result-->
        <result column="name" property="stuname"/>
        <result column="email" property="stuemail"/>
        <result column="age" property="stuage"/>
    </resultMap>

    <select id="selectMyStudent" resultMap="myStudentMap">
        select id,name,email,age from student
    </select>

    <!--列名属性名不一样:第二种方式
    resultType的默认原则是，同名的列值赋值给同名的属性
    使用as起列别名
    -->
    <select id="selectDiffColProperty" resultType="com.bit.domain.MyStudent">
        select id as stuid,name as stuname,email as stuemail,age stuage from student
    </select>

    <!--第一种like,java代码中来指定like的内容-->
    <select id="selectLikeOne" resultType="com.bit.domain.Student">
        select id,name,email,age from student where name like #{name}
    </select>

    <!--第二种方式:在mapper文件中拼接like的内容-->
    <select id="selectLikeTwo" resultType="com.bit.domain.Student">
        select id,name,email,age from student where name like "%" #{name} "%"
    </select>

</mapper>